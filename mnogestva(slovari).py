'''Напишите функцию update_dictionary(d, key, value), которая принимает на вход словарь d и два числа:
keykey и valuevalue.
Если ключ keykey есть в словаре dd, то добавьте значение valuevalue в список, который хранится по этому ключу.
Если ключа keykey нет в словаре, то нужно добавить значение в список по ключу 2 * key2∗key. Если и ключа 2 * key2∗key
нет, то нужно добавить ключ 2 * key2∗key в словарь и сопоставить ему список из переданного элемента [value][value].
Требуется реализовать только эту функцию, кода вне её не должно быть.
Функция не должна вызывать внутри себя функции input и print.'''

'''def update_dictionary(d, key, value):
    if key in d:
        d[key] += [value]
    elif 2 * key in d:
        d[2 * key] += [value]
    else:
        d[2 * key] = [value]

d = {1:-1}
print(d)
print(update_dictionary(d, 2, -2))'''

'''Когда Антон прочитал «Войну и мир», ему стало интересно, сколько слов и в каком количестве используется в этой книге.
Помогите Антону написать упрощённую версию такой программы, которая сможет подсчитать слова, разделённые пробелом 
и вывести получившуюся статистику.
Программа должна считывать одну строку со стандартного ввода и выводить для каждого уникального слова в этой 
строке число его повторений (без учёта регистра) в формате "слово количество" (см. пример вывода).
Порядок вывода слов может быть произвольным, каждое уникальное слово должно выводиться только один раз.'''


'''# a aa abC aa ac abc bcd a

a = input().lower().split() # приняли список, причесали его к малому регистру
b = set(a) # преобразовали список в набор уникальных элементов (множество)
for i in list(b): # берем уникальный элемент из списка b и считаем, сколько его в списке a
    f = list(a).count(i)
    print(i,f) # Выводим уникальное значение и число повтороений'''


def f(st):
    return st+1
dict={}
n=int(input())
for i in range(n):
    x=int(input())
    if x in dict:
        print(dict[x])
    else:
        dict[x]=f(x)
        print(dict[x])

